// This file is generated by rust-protobuf 3.2.0. Do not edit
// .proto file is parsed by protoc 3.19.4
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_results)]
#![allow(unused_mut)]

//! Generated file from `xresloader_ue.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_3_2_0;

#[derive(Clone,Copy,PartialEq,Eq,Debug,Hash)]
// @@protoc_insertion_point(enum:org.xresloader.ue.loader_mode)
pub enum Loader_mode {
    // @@protoc_insertion_point(enum_value:org.xresloader.ue.loader_mode.EN_LOADER_MODE_DEFAULT)
    EN_LOADER_MODE_DEFAULT = 0,
    // @@protoc_insertion_point(enum_value:org.xresloader.ue.loader_mode.EN_LOADER_MODE_ENABLE)
    EN_LOADER_MODE_ENABLE = 1,
    // @@protoc_insertion_point(enum_value:org.xresloader.ue.loader_mode.EN_LOADER_MODE_DISABLE)
    EN_LOADER_MODE_DISABLE = 2,
}

impl ::protobuf::Enum for Loader_mode {
    const NAME: &'static str = "loader_mode";

    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<Loader_mode> {
        match value {
            0 => ::std::option::Option::Some(Loader_mode::EN_LOADER_MODE_DEFAULT),
            1 => ::std::option::Option::Some(Loader_mode::EN_LOADER_MODE_ENABLE),
            2 => ::std::option::Option::Some(Loader_mode::EN_LOADER_MODE_DISABLE),
            _ => ::std::option::Option::None
        }
    }

    const VALUES: &'static [Loader_mode] = &[
        Loader_mode::EN_LOADER_MODE_DEFAULT,
        Loader_mode::EN_LOADER_MODE_ENABLE,
        Loader_mode::EN_LOADER_MODE_DISABLE,
    ];
}

impl ::protobuf::EnumFull for Loader_mode {
    fn enum_descriptor() -> ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::Lazy::new();
        descriptor.get(|| file_descriptor().enum_by_package_relative_name("loader_mode").unwrap()).clone()
    }

    fn descriptor(&self) -> ::protobuf::reflect::EnumValueDescriptor {
        let index = *self as usize;
        Self::enum_descriptor().value_by_index(index)
    }
}

impl ::std::default::Default for Loader_mode {
    fn default() -> Self {
        Loader_mode::EN_LOADER_MODE_DEFAULT
    }
}

impl Loader_mode {
    fn generated_enum_descriptor_data() -> ::protobuf::reflect::GeneratedEnumDescriptorData {
        ::protobuf::reflect::GeneratedEnumDescriptorData::new::<Loader_mode>("loader_mode")
    }
}

/// Extension fields
pub mod exts {

    pub const key_tag: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, i64> = ::protobuf::ext::ExtFieldOptional::new(1101, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_INT64);

    pub const ue_type_name: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(1102, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const ue_type_is_class: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, bool> = ::protobuf::ext::ExtFieldOptional::new(1103, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_BOOL);

    pub const ue_origin_type_name: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(1104, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const ue_origin_type_default_value: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::FieldOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(1105, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const helper: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::std::string::String> = ::protobuf::ext::ExtFieldOptional::new(1101, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);

    pub const not_data_table: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, bool> = ::protobuf::ext::ExtFieldOptional::new(1102, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_BOOL);

    pub const default_loader: ::protobuf::ext::ExtFieldOptional<::protobuf::descriptor::MessageOptions, ::protobuf::EnumOrUnknown<super::Loader_mode>> = ::protobuf::ext::ExtFieldOptional::new(1103, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_ENUM);

    pub const include_header: ::protobuf::ext::ExtFieldRepeated<::protobuf::descriptor::MessageOptions, ::std::string::String> = ::protobuf::ext::ExtFieldRepeated::new(1104, ::protobuf::descriptor::field_descriptor_proto::Type::TYPE_STRING);
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x13xresloader_ue.proto\x12\x11org.xresloader.ue\x1a\x20google/protobu\
    f/descriptor.proto*`\n\x0bloader_mode\x12\x1a\n\x16EN_LOADER_MODE_DEFAUL\
    T\x10\0\x12\x19\n\x15EN_LOADER_MODE_ENABLE\x10\x01\x12\x1a\n\x16EN_LOADE\
    R_MODE_DISABLE\x10\x02:7\n\x07key_tag\x18\xcd\x08\x20\x01(\x03\x12\x1d.g\
    oogle.protobuf.FieldOptionsR\x06keyTag:@\n\x0cue_type_name\x18\xce\x08\
    \x20\x01(\t\x12\x1d.google.protobuf.FieldOptionsR\nueTypeName:G\n\x10ue_\
    type_is_class\x18\xcf\x08\x20\x01(\x08\x12\x1d.google.protobuf.FieldOpti\
    onsR\rueTypeIsClass:M\n\x13ue_origin_type_name\x18\xd0\x08\x20\x01(\t\
    \x12\x1d.google.protobuf.FieldOptionsR\x10ueOriginTypeName:^\n\x1cue_ori\
    gin_type_default_value\x18\xd1\x08\x20\x01(\t\x12\x1d.google.protobuf.Fi\
    eldOptionsR\x18ueOriginTypeDefaultValue:8\n\x06helper\x18\xcd\x08\x20\
    \x01(\t\x12\x1f.google.protobuf.MessageOptionsR\x06helper:F\n\x0enot_dat\
    a_table\x18\xce\x08\x20\x01(\x08\x12\x1f.google.protobuf.MessageOptionsR\
    \x0cnotDataTable:g\n\x0edefault_loader\x18\xcf\x08\x20\x01(\x0e2\x1e.org\
    .xresloader.ue.loader_mode\x12\x1f.google.protobuf.MessageOptionsR\rdefa\
    ultLoader:G\n\x0einclude_header\x18\xd0\x08\x20\x03(\t\x12\x1f.google.pr\
    otobuf.MessageOptionsR\rincludeHeaderb\x06proto3\
";

/// `FileDescriptorProto` object which was a source for this generated file
fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    static file_descriptor_proto_lazy: ::protobuf::rt::Lazy<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::Lazy::new();
    file_descriptor_proto_lazy.get(|| {
        ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
    })
}

/// `FileDescriptor` object which allows dynamic access to files
pub fn file_descriptor() -> &'static ::protobuf::reflect::FileDescriptor {
    static generated_file_descriptor_lazy: ::protobuf::rt::Lazy<::protobuf::reflect::GeneratedFileDescriptor> = ::protobuf::rt::Lazy::new();
    static file_descriptor: ::protobuf::rt::Lazy<::protobuf::reflect::FileDescriptor> = ::protobuf::rt::Lazy::new();
    file_descriptor.get(|| {
        let generated_file_descriptor = generated_file_descriptor_lazy.get(|| {
            let mut deps = ::std::vec::Vec::with_capacity(1);
            deps.push(::protobuf::descriptor::file_descriptor().clone());
            let mut messages = ::std::vec::Vec::with_capacity(0);
            let mut enums = ::std::vec::Vec::with_capacity(1);
            enums.push(Loader_mode::generated_enum_descriptor_data());
            ::protobuf::reflect::GeneratedFileDescriptor::new_generated(
                file_descriptor_proto(),
                deps,
                messages,
                enums,
            )
        });
        ::protobuf::reflect::FileDescriptor::new_generated_2(generated_file_descriptor)
    })
}
